// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Railroad.DAL.Data;

#nullable disable

namespace Railroad.Migrations
{
    [DbContext(typeof(RailroadDbContext))]
    [Migration("20250830175859_Blablabla")]
    partial class Blablabla
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Railroad.DAL.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiscountValue")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountValue = 10,
                            Email = "ivan@mail.com",
                            PersonId = 1,
                            RegistrationDate = new DateTime(2023, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DiscountValue = 5,
                            Email = "olena@mail.com",
                            PersonId = 2,
                            RegistrationDate = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Railroad.DAL.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(170)
                        .HasColumnType("nvarchar(170)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1990, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Kyiv",
                            Country = "Ukraine",
                            Name = "Ivan",
                            PhoneNumber = "380931234567",
                            Surname = "Petrenko"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1995, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Lviv",
                            Country = "Ukraine",
                            Name = "Olena",
                            PhoneNumber = "380671112233",
                            Surname = "Shevchenko"
                        });
                });

            modelBuilder.Entity("Railroad.DAL.Entities.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PriceForKGOfCarriageWeight")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceForKilometer")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PriceForKGOfCarriageWeight = 2.5m,
                            PriceForKilometer = 0.5m
                        });
                });

            modelBuilder.Entity("Railroad.DAL.Entities.RoutePoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("DistanceFromPreviousStation")
                        .HasColumnType("float");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.Property<int>("TrainRouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.HasIndex("TrainRouteId");

                    b.ToTable("RoutePoints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalTime = new DateTime(2025, 8, 28, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureTime = new DateTime(2025, 8, 28, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            DistanceFromPreviousStation = 0.0,
                            Order = 1,
                            Platform = 1,
                            StationId = 1,
                            TrainRouteId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArrivalTime = new DateTime(2025, 8, 28, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureTime = new DateTime(2025, 8, 28, 12, 10, 0, 0, DateTimeKind.Unspecified),
                            DistanceFromPreviousStation = 540.0,
                            Order = 2,
                            Platform = 2,
                            StationId = 2,
                            TrainRouteId = 1
                        });
                });

            modelBuilder.Entity("Railroad.DAL.Entities.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NuberOfPlatforms")
                        .HasColumnType("int");

                    b.Property<string>("StationCityName")
                        .IsRequired()
                        .HasMaxLength(170)
                        .HasColumnType("nvarchar(170)");

                    b.Property<string>("StationDistrictName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Central Station",
                            NuberOfPlatforms = 5,
                            StationCityName = "Kyiv",
                            StationDistrictName = "Podil"
                        },
                        new
                        {
                            Id = 2,
                            Name = "South Station",
                            NuberOfPlatforms = 3,
                            StationCityName = "Lviv",
                            StationDistrictName = "Halych"
                        });
                });

            modelBuilder.Entity("Railroad.DAL.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CarriagePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("CarriageWeight")
                        .HasColumnType("float");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DepartureStationId")
                        .HasColumnType("int");

                    b.Property<int>("DestinationStationId")
                        .HasColumnType("int");

                    b.Property<decimal>("FinalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RoadPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Seat")
                        .HasColumnType("int");

                    b.Property<int>("TrainRouteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PriceId");

                    b.HasIndex("TrainRouteId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarriagePrice = 25m,
                            CarriageWeight = 10.0,
                            CustomerId = 1,
                            DepartureStationId = 1,
                            DestinationStationId = 2,
                            FinalPrice = 295m,
                            PriceId = 1,
                            PurchaseDate = new DateTime(2024, 9, 12, 5, 2, 3, 0, DateTimeKind.Unspecified),
                            RoadPrice = 270m,
                            Seat = 12,
                            TrainRouteId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarriagePrice = 37.5m,
                            CarriageWeight = 15.0,
                            CustomerId = 2,
                            DepartureStationId = 2,
                            DestinationStationId = 1,
                            FinalPrice = 307.5m,
                            PriceId = 1,
                            PurchaseDate = new DateTime(2025, 8, 28, 9, 1, 1, 0, DateTimeKind.Unspecified),
                            RoadPrice = 270m,
                            Seat = 8,
                            TrainRouteId = 2
                        },
                        new
                        {
                            Id = 3,
                            CarriagePrice = 30m,
                            CarriageWeight = 12.0,
                            CustomerId = 2,
                            DepartureStationId = 2,
                            DestinationStationId = 1,
                            FinalPrice = 300m,
                            PriceId = 1,
                            PurchaseDate = new DateTime(2024, 7, 28, 8, 11, 12, 0, DateTimeKind.Unspecified),
                            RoadPrice = 270m,
                            Seat = 9,
                            TrainRouteId = 1
                        });
                });

            modelBuilder.Entity("Railroad.DAL.Entities.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trains");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Intercity-1",
                            NumberOfSeats = 200
                        },
                        new
                        {
                            Id = 2,
                            Name = "Express-5",
                            NumberOfSeats = 150
                        });
                });

            modelBuilder.Entity("Railroad.DAL.Entities.TrainRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainId");

                    b.ToTable("TrainRoutes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kyiv - Lviv Route",
                            TrainId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lviv - Odesa Route",
                            TrainId = 2
                        });
                });

            modelBuilder.Entity("Railroad.DAL.Entities.Customer", b =>
                {
                    b.HasOne("Railroad.DAL.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Railroad.DAL.Entities.RoutePoint", b =>
                {
                    b.HasOne("Railroad.DAL.Entities.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railroad.DAL.Entities.TrainRoute", "TrainRoute")
                        .WithMany("RoutePoints")
                        .HasForeignKey("TrainRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");

                    b.Navigation("TrainRoute");
                });

            modelBuilder.Entity("Railroad.DAL.Entities.Ticket", b =>
                {
                    b.HasOne("Railroad.DAL.Entities.Customer", "Customer")
                        .WithMany("Tickets")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railroad.DAL.Entities.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Railroad.DAL.Entities.TrainRoute", "TrainRoute")
                        .WithMany()
                        .HasForeignKey("TrainRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Price");

                    b.Navigation("TrainRoute");
                });

            modelBuilder.Entity("Railroad.DAL.Entities.TrainRoute", b =>
                {
                    b.HasOne("Railroad.DAL.Entities.Train", "Train")
                        .WithMany()
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("Railroad.DAL.Entities.Customer", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Railroad.DAL.Entities.TrainRoute", b =>
                {
                    b.Navigation("RoutePoints");
                });
#pragma warning restore 612, 618
        }
    }
}
